function multicart(){
  /*

# Scenario 1: User is not logged in
if user is not logged in:
    # Create a cart for the guest user (if not already created)
    if guest cart does not exist:
        create a new cart for the guest user
    else:
        retrieve the guest cart

    # Allow user to add, remove, or view items in the guest cart

# Scenario 2: User is logged in
if user is logged in:
    # Retrieve the user's cart
    retrieve the user's cart based on their userID
    
    # Allow user to add, remove, or view items in their cart
    if user adds or removes items:
        update the cart items accordingly in the CartItems table

# Scenario 3: User had a cart as a guest then logs in
if user was a guest and now logs in:
    # Merge the guest cart with the user's cart
    retrieve the guest cart and user's cart
    for each item in guest cart:
        if the same item exists in user's cart:
            update the quantity in the user's cart
        else:
            add the item to the user's cart
    delete the guest cart

# Scenario 4: User logs out
if user logs out:
    # Clear the user's cart (or keep it for future reference)
    mark the user's cart as "inactive" or delete it

# Displaying cart contents and checkout logic would come here
# This would involve querying the CartItems table to fetch cart details

# Proceed to checkout logic would involve processing the cart items and creating orders


*/
}


function onecart(){
  /* One Cart revision strategy

  Guest user Logic.

    is there a cart already?

    no  : 1. create new cart and store the info
          2. return a cookie to user 

    yes : 1. Update the information in the cart
          2. update the moded
          3. return cookie to user. 
    
  Logging in user logic.
    
    is there a cart in the bd already?

      no  : 1. create new cart and store the info with user email
            2. return a cookie to user 

      yes : is there items in the guest cart
          
          yes : 1. get guest id username and store it
                2. replace all items with that cart ID to use the DB cartID // merge carts
                3. update the cart moded field
                4. return cookie to user with updated information. 

          no  : 1. get the cart info and return it as cookie
      
  Logged in user logic

    is there a cart already in the db?

    no  : 1. create new cart and store the info with user email
          2. return a cookie to user.
    
    yes : 1. Update the information in the cart
          2. update the moded
          3. return cookie to user. 

*/
}
